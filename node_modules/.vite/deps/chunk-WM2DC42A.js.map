{
  "version": 3,
  "sources": ["../../starknet/dist/utils/encode.js", "../../starknet/dist/utils/number.js", "../../starknet/dist/utils/uint256.js"],
  "sourcesContent": ["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utf8ToArray = exports.sanitizeHex = exports.sanitizeBytes = exports.calcByteLength = exports.padLeft = exports.addHexPrefix = exports.removeHexPrefix = exports.buf2hex = exports.btoaUniversal = exports.arrayBufferToString = exports.IS_BROWSER = void 0;\n/* eslint-disable no-param-reassign */\nexports.IS_BROWSER = typeof window !== 'undefined';\nvar STRING_ZERO = '0';\nfunction arrayBufferToString(array) {\n    return new Uint8Array(array).reduce(function (data, byte) { return data + String.fromCharCode(byte); }, '');\n}\nexports.arrayBufferToString = arrayBufferToString;\nfunction btoaUniversal(b) {\n    return exports.IS_BROWSER ? btoa(arrayBufferToString(b)) : Buffer.from(b).toString('base64');\n}\nexports.btoaUniversal = btoaUniversal;\nfunction buf2hex(buffer) {\n    return __spreadArray([], __read(buffer), false).map(function (x) { return x.toString(16).padStart(2, '0'); }).join('');\n}\nexports.buf2hex = buf2hex;\n/**\n * Some function imported from https://github.com/pedrouid/enc-utils/blob/master/src/index.ts\n * enc-utils is no dependency to avoid using `Buffer` which just works in node and no browsers\n */\nfunction removeHexPrefix(hex) {\n    return hex.replace(/^0x/, '');\n}\nexports.removeHexPrefix = removeHexPrefix;\nfunction addHexPrefix(hex) {\n    return \"0x\".concat(removeHexPrefix(hex));\n}\nexports.addHexPrefix = addHexPrefix;\nfunction padString(str, length, left, padding) {\n    if (padding === void 0) { padding = STRING_ZERO; }\n    var diff = length - str.length;\n    var result = str;\n    if (diff > 0) {\n        var pad = padding.repeat(diff);\n        result = left ? pad + str : str + pad;\n    }\n    return result;\n}\nfunction padLeft(str, length, padding) {\n    if (padding === void 0) { padding = STRING_ZERO; }\n    return padString(str, length, true, padding);\n}\nexports.padLeft = padLeft;\nfunction calcByteLength(length, byteSize) {\n    if (byteSize === void 0) { byteSize = 8; }\n    var remainder = length % byteSize;\n    return remainder ? ((length - remainder) / byteSize) * byteSize + byteSize : length;\n}\nexports.calcByteLength = calcByteLength;\nfunction sanitizeBytes(str, byteSize, padding) {\n    if (byteSize === void 0) { byteSize = 8; }\n    if (padding === void 0) { padding = STRING_ZERO; }\n    return padLeft(str, calcByteLength(str.length, byteSize), padding);\n}\nexports.sanitizeBytes = sanitizeBytes;\nfunction sanitizeHex(hex) {\n    hex = removeHexPrefix(hex);\n    hex = sanitizeBytes(hex, 2);\n    if (hex) {\n        hex = addHexPrefix(hex);\n    }\n    return hex;\n}\nexports.sanitizeHex = sanitizeHex;\n// implemented using TextEncoder to make it isomorphic\nfunction utf8ToArray(str) {\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToArray = utf8ToArray;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigNumberishArrayToDecimalStringArray = exports.assertInRange = exports.toFelt = exports.hexToDecimalString = exports.toHex = exports.toBN = exports.isHex = void 0;\nvar bn_js_1 = __importStar(require(\"bn.js\"));\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\nvar encode_1 = require(\"./encode\");\nfunction isHex(hex) {\n    return hex.startsWith('0x');\n}\nexports.isHex = isHex;\nfunction toBN(number, base) {\n    if (typeof number === 'string' && isHex(number) && !base)\n        return new bn_js_1.default((0, encode_1.removeHexPrefix)(number), 'hex');\n    return new bn_js_1.default(number, base);\n}\nexports.toBN = toBN;\nfunction toHex(number) {\n    return (0, encode_1.addHexPrefix)(number.toString('hex'));\n}\nexports.toHex = toHex;\nfunction hexToDecimalString(hex) {\n    return toBN(\"0x\".concat(hex.replace(/^0x/, ''))).toString();\n}\nexports.hexToDecimalString = hexToDecimalString;\nfunction toFelt(num) {\n    if ((0, bn_js_1.isBN)(num)) {\n        return num.toString();\n    }\n    return toBN(num).toString();\n}\nexports.toFelt = toFelt;\n/*\n Asserts input is equal to or greater then lowerBound and lower then upperBound.\n Assert message specifies inputName.\n input, lowerBound, and upperBound should be of type BN.\n inputName should be a string.\n*/\nfunction assertInRange(input, lowerBound, upperBound, inputName) {\n    if (inputName === void 0) { inputName = ''; }\n    var messageSuffix = inputName === '' ? 'invalid length' : \"invalid \".concat(inputName, \" length\");\n    var inputBn = toBN(input);\n    (0, minimalistic_assert_1.default)(inputBn.gte(toBN(lowerBound)) && inputBn.lt(toBN(upperBound)), \"Message not signable, \".concat(messageSuffix, \".\"));\n}\nexports.assertInRange = assertInRange;\nfunction bigNumberishArrayToDecimalStringArray(rawCalldata) {\n    return rawCalldata.map(function (x) { return toBN(x).toString(10); });\n}\nexports.bigNumberishArrayToDecimalStringArray = bigNumberishArrayToDecimalStringArray;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bnToUint256 = exports.isUint256 = exports.UINT_256_MAX = exports.UINT_128_MAX = exports.uint256ToBN = void 0;\nvar encode_1 = require(\"./encode\");\nvar number_1 = require(\"./number\");\n// function to convert Uint256 to BN\nfunction uint256ToBN(uint256) {\n    return (0, number_1.toBN)(uint256.high).shln(128).add((0, number_1.toBN)(uint256.low));\n}\nexports.uint256ToBN = uint256ToBN;\nexports.UINT_128_MAX = (0, number_1.toBN)(1).shln(128).sub((0, number_1.toBN)(1));\nexports.UINT_256_MAX = (0, number_1.toBN)(1).shln(256).sub((0, number_1.toBN)(1));\n// function to check if BN is smaller or equal 2**256-1\nfunction isUint256(bn) {\n    return (0, number_1.toBN)(bn).lte(exports.UINT_256_MAX);\n}\nexports.isUint256 = isUint256;\n// function to convert BN to Uint256\nfunction bnToUint256(bignumber) {\n    var bn = (0, number_1.toBN)(bignumber);\n    if (!isUint256(bn))\n        throw new Error('Number is too large');\n    return {\n        low: (0, encode_1.addHexPrefix)(bn.maskn(128).toString(16)),\n        high: (0, encode_1.addHexPrefix)(bn.shrn(128).toString(16)),\n    };\n}\nexports.bnToUint256 = bnToUint256;\n"],
  "mappings": "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",
  "names": []
}
