{
  "version": 3,
  "sources": ["../../starknet/utils/encode.js", "../../starknet/utils/number.js"],
  "sourcesContent": ["'use strict';\nvar __read =\n  (this && this.__read) ||\n  function (o, n) {\n    var m = typeof Symbol === 'function' && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n      r,\n      ar = [],\n      e;\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = { error: error };\n    } finally {\n      try {\n        if (r && !r.done && (m = i['return'])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n    return ar;\n  };\nvar __spreadArray =\n  (this && this.__spreadArray) ||\n  function (to, from, pack) {\n    if (pack || arguments.length === 2)\n      for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n        }\n      }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  };\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.utf8ToArray =\n  exports.sanitizeHex =\n  exports.sanitizeBytes =\n  exports.calcByteLength =\n  exports.padLeft =\n  exports.addHexPrefix =\n  exports.removeHexPrefix =\n  exports.buf2hex =\n  exports.btoaUniversal =\n  exports.arrayBufferToString =\n  exports.IS_BROWSER =\n    void 0;\n/* eslint-disable no-param-reassign */\nexports.IS_BROWSER = typeof window !== 'undefined';\nvar STRING_ZERO = '0';\nfunction arrayBufferToString(array) {\n  return new Uint8Array(array).reduce(function (data, byte) {\n    return data + String.fromCharCode(byte);\n  }, '');\n}\nexports.arrayBufferToString = arrayBufferToString;\nfunction btoaUniversal(b) {\n  return exports.IS_BROWSER ? btoa(arrayBufferToString(b)) : Buffer.from(b).toString('base64');\n}\nexports.btoaUniversal = btoaUniversal;\nfunction buf2hex(buffer) {\n  return __spreadArray([], __read(buffer), false)\n    .map(function (x) {\n      return x.toString(16).padStart(2, '0');\n    })\n    .join('');\n}\nexports.buf2hex = buf2hex;\n/**\n * Some function imported from https://github.com/pedrouid/enc-utils/blob/master/src/index.ts\n * enc-utils is no dependency to avoid using `Buffer` which just works in node and no browsers\n */\nfunction removeHexPrefix(hex) {\n  return hex.replace(/^0x/, '');\n}\nexports.removeHexPrefix = removeHexPrefix;\nfunction addHexPrefix(hex) {\n  return '0x'.concat(removeHexPrefix(hex));\n}\nexports.addHexPrefix = addHexPrefix;\nfunction padString(str, length, left, padding) {\n  if (padding === void 0) {\n    padding = STRING_ZERO;\n  }\n  var diff = length - str.length;\n  var result = str;\n  if (diff > 0) {\n    var pad = padding.repeat(diff);\n    result = left ? pad + str : str + pad;\n  }\n  return result;\n}\nfunction padLeft(str, length, padding) {\n  if (padding === void 0) {\n    padding = STRING_ZERO;\n  }\n  return padString(str, length, true, padding);\n}\nexports.padLeft = padLeft;\nfunction calcByteLength(length, byteSize) {\n  if (byteSize === void 0) {\n    byteSize = 8;\n  }\n  var remainder = length % byteSize;\n  return remainder ? ((length - remainder) / byteSize) * byteSize + byteSize : length;\n}\nexports.calcByteLength = calcByteLength;\nfunction sanitizeBytes(str, byteSize, padding) {\n  if (byteSize === void 0) {\n    byteSize = 8;\n  }\n  if (padding === void 0) {\n    padding = STRING_ZERO;\n  }\n  return padLeft(str, calcByteLength(str.length, byteSize), padding);\n}\nexports.sanitizeBytes = sanitizeBytes;\nfunction sanitizeHex(hex) {\n  hex = removeHexPrefix(hex);\n  hex = sanitizeBytes(hex, 2);\n  if (hex) {\n    hex = addHexPrefix(hex);\n  }\n  return hex;\n}\nexports.sanitizeHex = sanitizeHex;\n// implemented using TextEncoder to make it isomorphic\nfunction utf8ToArray(str) {\n  return new TextEncoder().encode(str);\n}\nexports.utf8ToArray = utf8ToArray;\n", "'use strict';\nvar __createBinding =\n  (this && this.__createBinding) ||\n  (Object.create\n    ? function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        var desc = Object.getOwnPropertyDescriptor(m, k);\n        if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n          desc = {\n            enumerable: true,\n            get: function () {\n              return m[k];\n            },\n          };\n        }\n        Object.defineProperty(o, k2, desc);\n      }\n    : function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        o[k2] = m[k];\n      });\nvar __setModuleDefault =\n  (this && this.__setModuleDefault) ||\n  (Object.create\n    ? function (o, v) {\n        Object.defineProperty(o, 'default', { enumerable: true, value: v });\n      }\n    : function (o, v) {\n        o['default'] = v;\n      });\nvar __importStar =\n  (this && this.__importStar) ||\n  function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null)\n      for (var k in mod)\n        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\nvar __importDefault =\n  (this && this.__importDefault) ||\n  function (mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.bigNumberishArrayToDecimalStringArray =\n  exports.assertInRange =\n  exports.toFelt =\n  exports.hexToDecimalString =\n  exports.toHex =\n  exports.toBN =\n  exports.isHex =\n    void 0;\nvar bn_js_1 = __importStar(require('bn.js'));\nvar minimalistic_assert_1 = __importDefault(require('minimalistic-assert'));\nvar encode_1 = require('./encode');\nfunction isHex(hex) {\n  return hex.startsWith('0x');\n}\nexports.isHex = isHex;\nfunction toBN(number, base) {\n  if (typeof number === 'string' && isHex(number) && !base)\n    return new bn_js_1.default((0, encode_1.removeHexPrefix)(number), 'hex');\n  return new bn_js_1.default(number, base);\n}\nexports.toBN = toBN;\nfunction toHex(number) {\n  return (0, encode_1.addHexPrefix)(number.toString('hex'));\n}\nexports.toHex = toHex;\nfunction hexToDecimalString(hex) {\n  return toBN('0x'.concat(hex.replace(/^0x/, ''))).toString();\n}\nexports.hexToDecimalString = hexToDecimalString;\nfunction toFelt(num) {\n  if ((0, bn_js_1.isBN)(num)) {\n    return num.toString();\n  }\n  return toBN(num).toString();\n}\nexports.toFelt = toFelt;\n/*\n Asserts input is equal to or greater then lowerBound and lower then upperBound.\n Assert message specifies inputName.\n input, lowerBound, and upperBound should be of type BN.\n inputName should be a string.\n*/\nfunction assertInRange(input, lowerBound, upperBound, inputName) {\n  if (inputName === void 0) {\n    inputName = '';\n  }\n  var messageSuffix = inputName === '' ? 'invalid length' : 'invalid '.concat(inputName, ' length');\n  var inputBn = toBN(input);\n  (0, minimalistic_assert_1.default)(\n    inputBn.gte(toBN(lowerBound)) && inputBn.lt(toBN(upperBound)),\n    'Message not signable, '.concat(messageSuffix, '.')\n  );\n}\nexports.assertInRange = assertInRange;\nfunction bigNumberishArrayToDecimalStringArray(rawCalldata) {\n  return rawCalldata.map(function (x) {\n    return toBN(x).toString(10);\n  });\n}\nexports.bigNumberishArrayToDecimalStringArray = bigNumberishArrayToDecimalStringArray;\n"],
  "mappings": "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",
  "names": []
}
